/*
 * generated by Xtext 2.24.0
 */
package uk.kcl.pgt.mdd.cw.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import uk.kcl.pgt.mdd.cw.ide.contentassist.antlr.internal.InternalGameParser;
import uk.kcl.pgt.mdd.cw.services.GameGrammarAccess;

public class GameParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(GameGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, GameGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDeclAccess().getAlternatives(), "rule__Decl__Alternatives");
			builder.put(grammarAccess.getVarDeclAccess().getAlternatives(), "rule__VarDecl__Alternatives");
			builder.put(grammarAccess.getObjDeclAccess().getAlternatives(), "rule__ObjDecl__Alternatives");
			builder.put(grammarAccess.getStmtAccess().getAlternatives(), "rule__Stmt__Alternatives");
			builder.put(grammarAccess.getBlockAccess().getAlternatives(), "rule__Block__Alternatives");
			builder.put(grammarAccess.getRelExprAccess().getOpAlternatives_1_1_0(), "rule__RelExpr__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getAddExprAccess().getOpAlternatives_1_1_0(), "rule__AddExpr__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getMultExprAccess().getAlternatives_0(), "rule__MultExpr__Alternatives_0");
			builder.put(grammarAccess.getMultExprAccess().getOpAlternatives_1_1_0(), "rule__MultExpr__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getMultExprAccess().getAlternatives_1_2(), "rule__MultExpr__Alternatives_1_2");
			builder.put(grammarAccess.getAtomAccess().getAlternatives(), "rule__Atom__Alternatives");
			builder.put(grammarAccess.getUnaryOperationAccess().getOpAlternatives_0_0(), "rule__UnaryOperation__OpAlternatives_0_0");
			builder.put(grammarAccess.getGameAccess().getGroup(), "rule__Game__Group__0");
			builder.put(grammarAccess.getDeclAccess().getGroup_0(), "rule__Decl__Group_0__0");
			builder.put(grammarAccess.getDeclAccess().getGroup_1(), "rule__Decl__Group_1__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup_0(), "rule__VarDecl__Group_0__0");
			builder.put(grammarAccess.getVarDeclAccess().getGroup_1(), "rule__VarDecl__Group_1__0");
			builder.put(grammarAccess.getObjDeclAccess().getGroup_0(), "rule__ObjDecl__Group_0__0");
			builder.put(grammarAccess.getObjDeclAccess().getGroup_1(), "rule__ObjDecl__Group_1__0");
			builder.put(grammarAccess.getAttrAssListAccess().getGroup(), "rule__AttrAssList__Group__0");
			builder.put(grammarAccess.getAttrAssListAccess().getGroup_1(), "rule__AttrAssList__Group_1__0");
			builder.put(grammarAccess.getAttrAssAccess().getGroup(), "rule__AttrAss__Group__0");
			builder.put(grammarAccess.getStmtBlockAccess().getGroup(), "rule__StmtBlock__Group__0");
			builder.put(grammarAccess.getStmtAccess().getGroup_4(), "rule__Stmt__Group_4__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup(), "rule__IfStmt__Group__0");
			builder.put(grammarAccess.getIfStmtAccess().getGroup_5(), "rule__IfStmt__Group_5__0");
			builder.put(grammarAccess.getWhileStmtAccess().getGroup(), "rule__WhileStmt__Group__0");
			builder.put(grammarAccess.getForStmtAccess().getGroup(), "rule__ForStmt__Group__0");
			builder.put(grammarAccess.getEndStmtAccess().getGroup(), "rule__EndStmt__Group__0");
			builder.put(grammarAccess.getAssStmtAccess().getGroup(), "rule__AssStmt__Group__0");
			builder.put(grammarAccess.getVarAccess().getGroup(), "rule__Var__Group__0");
			builder.put(grammarAccess.getVarArrayAccess().getGroup(), "rule__VarArray__Group__0");
			builder.put(grammarAccess.getVarPropAccess().getGroup(), "rule__VarProp__Group__0");
			builder.put(grammarAccess.getAnimBlockAccess().getGroup(), "rule__AnimBlock__Group__0");
			builder.put(grammarAccess.getEventBlockAccess().getGroup(), "rule__EventBlock__Group__0");
			builder.put(grammarAccess.getExprAccess().getGroup(), "rule__Expr__Group__0");
			builder.put(grammarAccess.getExprAccess().getGroup_1(), "rule__Expr__Group_1__0");
			builder.put(grammarAccess.getAndExprAccess().getGroup(), "rule__AndExpr__Group__0");
			builder.put(grammarAccess.getAndExprAccess().getGroup_1(), "rule__AndExpr__Group_1__0");
			builder.put(grammarAccess.getRelExprAccess().getGroup(), "rule__RelExpr__Group__0");
			builder.put(grammarAccess.getRelExprAccess().getGroup_1(), "rule__RelExpr__Group_1__0");
			builder.put(grammarAccess.getAddExprAccess().getGroup(), "rule__AddExpr__Group__0");
			builder.put(grammarAccess.getAddExprAccess().getGroup_1(), "rule__AddExpr__Group_1__0");
			builder.put(grammarAccess.getMultExprAccess().getGroup(), "rule__MultExpr__Group__0");
			builder.put(grammarAccess.getMultExprAccess().getGroup_1(), "rule__MultExpr__Group_1__0");
			builder.put(grammarAccess.getAtomAccess().getGroup_1(), "rule__Atom__Group_1__0");
			builder.put(grammarAccess.getAtomAccess().getGroup_1_1(), "rule__Atom__Group_1_1__0");
			builder.put(grammarAccess.getUnaryOperationAccess().getGroup(), "rule__UnaryOperation__Group__0");
			builder.put(grammarAccess.getExprVarAccess().getGroup(), "rule__ExprVar__Group__0");
			builder.put(grammarAccess.getGameAccess().getNameAssignment_1(), "rule__Game__NameAssignment_1");
			builder.put(grammarAccess.getGameAccess().getAttrAssListAssignment_3(), "rule__Game__AttrAssListAssignment_3");
			builder.put(grammarAccess.getGameAccess().getDeclAssignment_5(), "rule__Game__DeclAssignment_5");
			builder.put(grammarAccess.getGameAccess().getInitBlockAssignment_6(), "rule__Game__InitBlockAssignment_6");
			builder.put(grammarAccess.getGameAccess().getFunctionsAssignment_7(), "rule__Game__FunctionsAssignment_7");
			builder.put(grammarAccess.getVarDeclAccess().getTypeAssignment_0_0(), "rule__VarDecl__TypeAssignment_0_0");
			builder.put(grammarAccess.getVarDeclAccess().getNameAssignment_0_1(), "rule__VarDecl__NameAssignment_0_1");
			builder.put(grammarAccess.getVarDeclAccess().getExprAssignment_0_3(), "rule__VarDecl__ExprAssignment_0_3");
			builder.put(grammarAccess.getVarDeclAccess().getTypeAssignment_1_0(), "rule__VarDecl__TypeAssignment_1_0");
			builder.put(grammarAccess.getVarDeclAccess().getNameAssignment_1_1(), "rule__VarDecl__NameAssignment_1_1");
			builder.put(grammarAccess.getVarDeclAccess().getArrSizeAssignment_1_3(), "rule__VarDecl__ArrSizeAssignment_1_3");
			builder.put(grammarAccess.getObjDeclAccess().getTypeAssignment_0_0(), "rule__ObjDecl__TypeAssignment_0_0");
			builder.put(grammarAccess.getObjDeclAccess().getNameAssignment_0_1(), "rule__ObjDecl__NameAssignment_0_1");
			builder.put(grammarAccess.getObjDeclAccess().getAttrAssListAssignment_0_3(), "rule__ObjDecl__AttrAssListAssignment_0_3");
			builder.put(grammarAccess.getObjDeclAccess().getTypeAssignment_1_0(), "rule__ObjDecl__TypeAssignment_1_0");
			builder.put(grammarAccess.getObjDeclAccess().getNameAssignment_1_1(), "rule__ObjDecl__NameAssignment_1_1");
			builder.put(grammarAccess.getObjDeclAccess().getArrSizeAssignment_1_3(), "rule__ObjDecl__ArrSizeAssignment_1_3");
			builder.put(grammarAccess.getAttrAssListAccess().getAttrAssAssignment_0(), "rule__AttrAssList__AttrAssAssignment_0");
			builder.put(grammarAccess.getAttrAssListAccess().getAttrAssAssignment_1_1(), "rule__AttrAssList__AttrAssAssignment_1_1");
			builder.put(grammarAccess.getAttrAssAccess().getNameAssignment_0(), "rule__AttrAss__NameAssignment_0");
			builder.put(grammarAccess.getAttrAssAccess().getExprAssignment_2(), "rule__AttrAss__ExprAssignment_2");
			builder.put(grammarAccess.getStmtBlockAccess().getStatementsAssignment_1(), "rule__StmtBlock__StatementsAssignment_1");
			builder.put(grammarAccess.getIfStmtAccess().getConditionAssignment_2(), "rule__IfStmt__ConditionAssignment_2");
			builder.put(grammarAccess.getIfStmtAccess().getConsequenceAssignment_4(), "rule__IfStmt__ConsequenceAssignment_4");
			builder.put(grammarAccess.getIfStmtAccess().getAlternativeAssignment_5_1(), "rule__IfStmt__AlternativeAssignment_5_1");
			builder.put(grammarAccess.getWhileStmtAccess().getWhileConditionAssignment_2(), "rule__WhileStmt__WhileConditionAssignment_2");
			builder.put(grammarAccess.getWhileStmtAccess().getStmtBlockAssignment_4(), "rule__WhileStmt__StmtBlockAssignment_4");
			builder.put(grammarAccess.getForStmtAccess().getInitStmtAssignment_2(), "rule__ForStmt__InitStmtAssignment_2");
			builder.put(grammarAccess.getForStmtAccess().getEndConditionAssignment_4(), "rule__ForStmt__EndConditionAssignment_4");
			builder.put(grammarAccess.getForStmtAccess().getLoopStmtAssignment_6(), "rule__ForStmt__LoopStmtAssignment_6");
			builder.put(grammarAccess.getForStmtAccess().getStmtBlockAssignment_8(), "rule__ForStmt__StmtBlockAssignment_8");
			builder.put(grammarAccess.getAssStmtAccess().getVarAssignment_0(), "rule__AssStmt__VarAssignment_0");
			builder.put(grammarAccess.getAssStmtAccess().getAssignmentAssignment_2(), "rule__AssStmt__AssignmentAssignment_2");
			builder.put(grammarAccess.getVarAccess().getNameAssignment_0(), "rule__Var__NameAssignment_0");
			builder.put(grammarAccess.getVarAccess().getVarArrayAssignment_1(), "rule__Var__VarArrayAssignment_1");
			builder.put(grammarAccess.getVarAccess().getVarPropAssignment_2(), "rule__Var__VarPropAssignment_2");
			builder.put(grammarAccess.getVarArrayAccess().getIndexExprAssignment_1(), "rule__VarArray__IndexExprAssignment_1");
			builder.put(grammarAccess.getVarPropAccess().getExtIdAssignment_1(), "rule__VarProp__ExtIdAssignment_1");
			builder.put(grammarAccess.getAnimBlockAccess().getNameAssignment_1(), "rule__AnimBlock__NameAssignment_1");
			builder.put(grammarAccess.getAnimBlockAccess().getObjTypeAssignment_3(), "rule__AnimBlock__ObjTypeAssignment_3");
			builder.put(grammarAccess.getAnimBlockAccess().getObjNameAssignment_4(), "rule__AnimBlock__ObjNameAssignment_4");
			builder.put(grammarAccess.getAnimBlockAccess().getStmtBlockAssignment_6(), "rule__AnimBlock__StmtBlockAssignment_6");
			builder.put(grammarAccess.getEventBlockAccess().getKeyAssignment_1(), "rule__EventBlock__KeyAssignment_1");
			builder.put(grammarAccess.getEventBlockAccess().getStmtBlockAssignment_2(), "rule__EventBlock__StmtBlockAssignment_2");
			builder.put(grammarAccess.getExprAccess().getOpAssignment_1_1(), "rule__Expr__OpAssignment_1_1");
			builder.put(grammarAccess.getExprAccess().getRightAssignment_1_2(), "rule__Expr__RightAssignment_1_2");
			builder.put(grammarAccess.getAndExprAccess().getOpAssignment_1_1(), "rule__AndExpr__OpAssignment_1_1");
			builder.put(grammarAccess.getAndExprAccess().getRightAssignment_1_2(), "rule__AndExpr__RightAssignment_1_2");
			builder.put(grammarAccess.getRelExprAccess().getOpAssignment_1_1(), "rule__RelExpr__OpAssignment_1_1");
			builder.put(grammarAccess.getRelExprAccess().getRightAssignment_1_2(), "rule__RelExpr__RightAssignment_1_2");
			builder.put(grammarAccess.getAddExprAccess().getOpAssignment_1_1(), "rule__AddExpr__OpAssignment_1_1");
			builder.put(grammarAccess.getAddExprAccess().getRightAssignment_1_2(), "rule__AddExpr__RightAssignment_1_2");
			builder.put(grammarAccess.getMultExprAccess().getOpAssignment_1_1(), "rule__MultExpr__OpAssignment_1_1");
			builder.put(grammarAccess.getMultExprAccess().getRightAssignment_1_2_0(), "rule__MultExpr__RightAssignment_1_2_0");
			builder.put(grammarAccess.getMultExprAccess().getRightAssignment_1_2_1(), "rule__MultExpr__RightAssignment_1_2_1");
			builder.put(grammarAccess.getAtomAccess().getOpAssignment_1_1_1(), "rule__Atom__OpAssignment_1_1_1");
			builder.put(grammarAccess.getAtomAccess().getRightAssignment_1_1_2(), "rule__Atom__RightAssignment_1_1_2");
			builder.put(grammarAccess.getUnaryOperationAccess().getOpAssignment_0(), "rule__UnaryOperation__OpAssignment_0");
			builder.put(grammarAccess.getUnaryOperationAccess().getRightAssignment_1(), "rule__UnaryOperation__RightAssignment_1");
			builder.put(grammarAccess.getIntLiteralAccess().getValueAssignment(), "rule__IntLiteral__ValueAssignment");
			builder.put(grammarAccess.getExprVarAccess().getExprAssignment_1(), "rule__ExprVar__ExprAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private GameGrammarAccess grammarAccess;

	@Override
	protected InternalGameParser createParser() {
		InternalGameParser result = new InternalGameParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GameGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GameGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
